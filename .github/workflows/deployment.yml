name: deploy dbt project
# This filter says only run this job when there is a push to the main branch
# This works off the assumption that you've restricted this branch to only all PRs to push to the default branch
# Update the name to match the name of your default branch

on:
  push:
    branches:
      - 'main'

env:
  DBT_PRODUCTION_ARGS: --project-dir dags/dbt/jaffle_shop --profiles-dir dags/dbt/jaffle_shop --target prod

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      #- name: setup python environment
      #  uses: actions/setup-python@v2
      #- name: install python dependencies
      #  uses: py-actions/py-dependency-install@v4
      #  with:
      #    path: "ci-requirements.txt"
      #- name: compile dbt manifest in production branch
      #  env:
      #    DBT_ACCESS_TOKEN: ${{ secrets.DBT_ACCESS_TOKEN }}
      #  run: |
      #    dbt deps ${{ env.DBT_PRODUCTION_ARGS }}
      #    dbt compile ${{ env.DBT_PRODUCTION_ARGS }}
      #- uses: bacongobbler/azure-blob-storage-upload@main
      #  with:
      #    source_dir: dags
      #    container_name: airflow
      #    extra_args: '--destination-path dags'
      #    connection_string: ${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}
      #    overwrite: 'true'
      #- id: azure-adf-login
      #  name: Adquiring Adf Access Token
      #  uses: Azure/azure-resource-login-action@v1.0.0
      #  with:
      #    creds: ${{ secrets.AZURE_CREDENTIALS }}
      #    resource-url: "https://management.azure.com"
      ##${{ steps.mgnt-login.outputs.token }}
      #- name: print token value
      #  run: |
      #    echo ${{ steps.azure-adf-login.outputs.token }}
      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          allow-no-subscriptions: true
      #    creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_ID }}- ${{ secrets.AZURE_SERVICE_PRINCIPAL_TENANT_ID }}- ${{ secrets.AZURE_SERVICE_PRINCIPAL_CLIENT_SECRET }}    
      - name: Get Azure Service Principal Token
        id: get_token
        run: |
          az account set --subscription 0e769015-a299-41a6-9793-8ffebd94ca3b
          ACCESS_TOKEN=$(az account get-access-token --resource=https://management.azure.com --query accessToken -o tsv)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
  
      - name: Use Azure Service Principal Token
        run: |
          echo $ACCESS_TOKEN
          # Use the $ACCESS_TOKEN in your subsequent Azure-related commands or scripts.
